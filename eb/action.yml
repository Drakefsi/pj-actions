name: 'EB Deployment'
description: 'Elastic Beanstalk workflow deployment'

inputs:
  application:
    description: 'Application name'
    required: true
  application_name:
    description: 'Alternative application name'
    required: false
  environment:
    description: 'Environment deployment'
    required: true
    default: 'development'
  aws-access-key-id:
    description: 'AWS access ID'
    required: true
  aws-secret-access-key:
    description: 'AWS access secret key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
    default: us-east-1
  icon:
    description: 'Country icon'
    required: true
  plataform:
    description: 'Environment plataform'
    required: true
  branch-release:
    description: 'Branch or release to deploy'
    required: true
  teams-webhook:
    description: 'Teams webhook'
    required: false

runs:
    using: "composite"
    steps:

    - name: üîß  Get tag name
      shell: bash
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "RELEASE=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: üåßÔ∏è Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: ‚ú® Checkout Code
      uses: actions/checkout@v3

    - name: üß∞ Install eb-cli
      shell: bash
      run: |
        sudo pip config --global set global.index-url http://${PROXY_DOMAIN}:${PROXY_PORT}${PROXY_PATH}
        sudo pip config --global set global.trusted-host ${PROXY_DOMAIN}
        python -m pip install --upgrade pip
        pip install urllib3==1.26.9
        pip install awsebcli --upgrade
      env:
        PROXY_DOMAIN: nexus.nexus.svc.local
        PROXY_PORT: 8081
        PROXY_PATH: /repository/pip-proxy/simple/

    - name: üõ∏ Deploy Elastic Beanstalk
      shell: bash
      run: |
        eb --version
        eb init ${{ inputs.application_name || inputs.application }} --region ${{ inputs.aws-region }} --platform "${{ inputs.plataform }}"
        eb deploy ${{ inputs.application }}-${{ inputs.environment }} -v --process
    
    - name:  üöÄ Teams success ‚úÖ
      if: ${{ success() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "03fc28",
        "summary": "Backend deployment (success) ‚úÖ",
        "sections": [{  
            "activityTitle": "Backend deployment (success) ‚úÖ", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name:  üöÄ Teams failure ‚ùå
      if: ${{ failure() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "fc4503",
        "summary": "Backend deployment (failure) ‚ùå",
        "sections": [{  
            "activityTitle": "Backend deployment (failure) ‚ùå", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name:  üöÄ Teams cancelled ‚ö†Ô∏è
      if: ${{ cancelled() }}
      shell: bash
      run: |
        curl --silent \
        --output /dev/null \
        --header 'content-type: application/json' \
        --url '${{ inputs.teams-webhook }}' \
        --data-raw '{  
        "@type": "MessageCard",  
        "@context": "http://schema.org/extensions",  
        "themeColor": "fce803",
        "summary": "Backend deployment (cancelled) ‚ö†Ô∏è",
        "sections": [{  
            "activityTitle": "Backend deployment (cancelled) ‚ö†Ô∏è", 
            "facts": [ 
            {  
                "name": "Application",  
                "value": "[${{ inputs.application }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }})"
            },  
            {  
                "name": "Country",
                "value": "${{ inputs.icon }}"
            },
            {
                "name": "Release",
                "value": "${{ env.RELEASE }}"
            },
            {  
                "name": "Triggered By",  
                "value": "@${{ github.actor }}"
            }],  
            "markdown": true  
          }]  
        }'
      continue-on-error: true
      env:
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

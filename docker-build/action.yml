name: 'Docker build'
description: 'Docker build per environment'

inputs:
  application:
    description: 'app name'
    required: true
  environment:
    description: 'Environment name'
    required: true
    default: 'development'
  aws-access-key-id:
    description: 'AWS access ID'
    required: true
  aws-secret-access-key:
    description: 'AWS access secret key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
    default: us-east-1
  aws-ecr-registry:
    description: 'Docker registry from AWS'
    required: true
  folder:
    description: 'Path build'
    required: false
    default: ./

runs:
    using: "composite"
    steps:
    - name: üåßÔ∏è Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: ‚ú® Checkout Code
      uses: actions/checkout@v3

    - name: üëÆ‚Äç‚ôÇÔ∏è Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: üë∑ Build, tag, and push the image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.application }}
        IMAGE_TAG: latest
      run: |
        cd ${{ inputs.folder }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG



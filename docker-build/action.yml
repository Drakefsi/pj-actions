name: 'EB Deployment'
description: 'Elastic Beanstalk workflow deployment'

inputs:
  application:
    description: 'Application name'
    required: true
  application_name:
    description: 'Alternative application name'
    required: false
  environment:
    description: 'Environment deployment'
    required: true
    default: 'development'
  aws-access-key-id:
    description: 'AWS access ID'
    required: true
  aws-secret-access-key:
    description: 'AWS access secret key'
    required: true
  aws-region:
    description: 'AWS region'
    required: true
    default: us-east-1
  aws-ecr-registry:
    description: 'Docker registry from AWS'
    required: true
  icon:
    description: 'Country icon'
    required: true
  plataform:
    description: 'Environment plataform'
    required: true
  branch-release:
    description: 'Branch or release to deploy'
    required: true
  slack-bot-token:
    description: 'Slack token'
    required: true
  slack-channel:
    description: 'Slack channel'
    required: true

runs:
    using: "composite"
    steps:

    - name: üîß  Get tag name
      shell: bash
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "RELEASE=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: üöÄ Slack status
      if: ${{ always() }}
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ inputs.slack-channel }}
        payload: |
          {
             "attachments":[
                {
                   "mrkdwn_in": ["text"],
                   "author_name":"Deployment ${{ inputs.application }}",
                   "author_link":"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                   "color":"",
                   "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
                }
             ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name: üåßÔ∏è Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: ‚ú® Checkout Code
      uses: actions/checkout@v3

    - name: üëÆ‚Äç‚ôÇÔ∏è Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: üë∑ Build, tag, and push the image to Amazon ECR
      id: build-image
      run: |
        docker build -t $IMAGE_URL .
        docker push $IMAGE_URL
      env:
        IMAGE_URL: ${{ inputs.aws-ecr-registry }}:${{ env.RELEASE || inputs.branch-release }}

    - name: üöÄ Slack success ‚úÖ
      if: ${{ success() }}
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ inputs.slack-channel }}
        payload: |
          {
             "attachments":[
                {
                   "mrkdwn_in": ["text"],
                   "author_name":"Deployment ${{ inputs.application }}",
                   "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
                   "color":"#03fc28",
                   "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
                }
             ]
          }
        update-ts: ${{ steps.slack.outputs.ts }}
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name: üöÄ Slack failure ‚ùå
      if: ${{ failure() }}
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ inputs.slack-channel }}
        payload: |
          {
             "attachments":[
                {
                   "mrkdwn_in": ["text"],
                   "author_name":"Deployment ${{ inputs.application }}",
                   "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
                   "color":"#fc4503",
                   "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
                }
             ]
          }
        update-ts: ${{ steps.slack.outputs.ts }}
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}

    - name: üöÄ Slack cancelled ‚ö†Ô∏è
      if: ${{ cancelled() }}
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ inputs.slack-channel }}
        payload: |
          {
             "attachments":[
                {
                   "mrkdwn_in": ["text"],
                   "author_name":"Deployment ${{ inputs.application }}",
                   "author_link":"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}/checks?check_suite_id=${{ github.run_id }}",
                   "color":"#fce803",
                   "text":"${{ inputs.icon }} *Release* ${{ env.RELEASE }} _by @${{ github.actor }}_"
                }
             ]
          }
        update-ts: ${{ steps.slack.outputs.ts }}
      env:
        SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        RELEASE: ${{ env.RELEASE || inputs.branch-release }}
